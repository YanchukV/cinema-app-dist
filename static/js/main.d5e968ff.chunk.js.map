{"version":3,"sources":["bus/trending/styles/styles.module.scss","bus/similarFilms/components/SliderMovies/styles.module.scss","bus/latestFilms/index.module.scss","bus/topRatedFilms/index.module.scss","bus/recommended/types.js","bus/recommended/reducer.js","bus/example/types.js","bus/example/reducer.js","bus/trending/types.js","bus/trending/reducer.js","bus/film/types.js","bus/film/reducer.js","bus/comments/types.js","bus/comments/reducer.js","bus/ui/types.js","bus/ui/actions.js","bus/ui/reducer.js","bus/latestFilms/types.js","bus/latestFilms/reducer.js","bus/topRatedFilms/types.js","bus/topRatedFilms/reducer.js","bus/similarFilms/types.js","bus/similarFilms/reducer.js","init/rootReducer.js","init/middleware.js","init/store.js","navigation/history.js","navigation/book.js","api/config.js","bus/example/api/index.js","bus/example/actions.js","bus/example/index.js","bus/example/hooks/useExampleFetch.js","pages/example/index.js","bus/popularFilms/types.js","bus/popularFilms/api/index.js","bus/popularFilms/actions.js","bus/popularFilms/helpers/columns.js","bus/helpers/getHandleMovieClick.js","bus/popularFilms/index.js","bus/popularFilms/hooks/usePopularFilms.js","pages/popularFilms/index.js","bus/trending/components/MovieCard/index.js","bus/trending/api/index.js","bus/trending/actions.js","bus/trending/index.js","bus/trending/hooks/useTrendingFetch.js","bus/trending/helpers/mapMovieObj.js","pages/home/index.js","bus/film/api/index.js","bus/film/actions.js","bus/comments/api/index.js","bus/comments/actions.js","bus/comments/index.js","bus/comments/hooks/useCommentsFetch.js","bus/similarFilms/components/MovieTile/index.js","bus/similarFilms/components/SliderMovies/index.js","bus/similarFilms/helpers/getGroupByFour.js","bus/similarFilms/helpers/getSimilarMovie.js","bus/similarFilms/api/index.js","bus/similarFilms/actions.js","bus/similarFilms/index.js","bus/similarFilms/hooks/useSimilarMoviesFetch.js","bus/recommended/api/index.js","bus/recommended/actions.js","bus/recommended/index.js","bus/recommended/hooks/useRecommendedFetch.js","bus/film/index.js","bus/film/hooks/useFilmFetch.js","pages/film/index.js","bus/latestFilms/api/index.js","bus/latestFilms/actions.js","bus/latestFilms/helper/index.js","bus/latestFilms/hooks/useLatestFilmsContent.js","bus/latestFilms/hooks/useLatestFilmsFetch.js","bus/latestFilms/index.js","pages/latest-films/index.js","bus/topRatedFilms/api/index.js","bus/topRatedFilms/actions.js","bus/topRatedFilms/index.js","bus/topRatedFilms/hooks/useTopRatedFilmsFetch.js","pages/topRatedFilms/index.js","navigation/index.js","App.js","serviceWorker.js","index.js","bus/similarFilms/components/MovieTile/styles.module.scss","bus/trending/components/MovieCard/styles/styles.module.scss","bus/similarFilms/styles.module.scss","bus/popularFilms/styles/index.module.scss","bus/recommended/styles/rec.module.scss"],"names":["module","exports","types","Object","freeze","RECOMMENDED_FILL","RECOMMENDED_FETCH_ASYNC","initialState","data","EXAMPLE_FILL","EXAMPLE_FETCH_ASYNC","TRENDING_FILL","TRENDING_FETCH_ASYNC","movies","FILM_FILL","FILM_FETCH_ASYNC","COMMENTS_FILL","COMMENTS_START_FETCHING","COMMENTS_STOP_FETCHING","COMMENTS_SET_FETCHING_ERROR","COMMENTS_FETCH_ASYNC","isFetching","error","UI_START_FETCHING","UI_STOP_FETCHING","UI_SET_FETCHING_ERROR","uiActions","startFetching","type","stopFetching","setFetchingError","payload","LATEST_FILMS_FILL","LATEST_FILMS_FETCH_ASYNC","isDataReady","TOP_RATED_FILMS_FILL","GENRE_FILL","TOP_RATED_FILMS_FETCH_ASYNC","genres","SIMILAR_MOVIES_FILL","SIMILAR_MOVIES_START_FETCHING","SIMILAR_MOVIES_STOP_FETCHING","SIMILAR_MOVIES_SET_ERROR","SIMILAR_MOVIES_ASYNC","rootReducer","combineReducers","example","state","ui","meta","trending","film","comments","latestFilms","topMovies","similarMovies","action","recommended","composeEnhancers","createLogger","duration","collapsed","colors","title","prevState","nextState","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","createStore","applyMiddleware","history","createBrowserHistory","book","root","news","popularFilms","films","topRatedFilms","uri","token","process","imagesSource","api","upcomingMovies","fetch","axios","get","params","api_key","language","exampleActions","fill","fetchAsync","dispatch","a","response","status","results","console","log","message","Example","useDispatch","useEffect","useSelector","useExampleFetch","errorAuth","errorMessage","loader","map","id","overview","poster_path","key","poster","columns","dataIndex","render","url","src","alt","width","moviesJSX","length","dataSource","defaultSortOrder","sorter","b","vote_average","handleMovieClick","push","serverSvg","PopularFilms","usePopularFilms","className","Styles","container","image","description","Empty","PRESENTED_IMAGE_SIMPLE","popularity","vote_count","rowClassName","tableRow","onRow","record","rowIndex","onClick","Content","PopularFilmsPage","MovieCard","props","item","releaseYear","rating","styles","card","hoverable","style","cover","cx","label","Meta","trendingFilms","timeWindow","trendingActions","Trending","useState","activeTabKey","setActiveTab","queryParam","setQueryParam","useTrendingFetch","hasError","movie","obj","Date","release_date","getFullYear","panes","content","param","onChange","activeId","activeTab","filter","pane","TabPane","tab","closable","row","Home","getMovie","filmActions","getComments","commentsActions","Comments","Layout","useCommentsFetch","useParams","author","avatar","UserOutlined","commentsJSX","padding","MovieTile","releaseYearStyles","ratingStyles","movieTile","SliderMovies","sliderMovies","getGroupByFour","c","d","rest","x","undefined","concat","SlideItem","items","slideItem","gutter","span","text","getShortDescription","substring","getSimilarMovie","allSlideJSX","slide","idx","slider","autoplay","getSimilarMovies","movie_id","page","similarMoviesActions","setError","fillMovies","SimilarMovies","useSimilarMoviesFetch","movieId","similarMoviesJSX","Title","level","strong","similarFilms","recommendedActions","Recommended","useRecommendedFetch","i","smallDescription","substr","rate","count","fontSize","disabled","allowHalf","defaultValue","dots","output","Math","random","splice","carousel","Film","useFilmFetch","backdrop_path","budget","revenue","movieGenres","color","marginBottom","name","layout","bordered","Item","value","valueStyle","prefix","precision","latestFilmsActions","columnsScheme","split","pop","indexOf","checkForImgSource","useLatestFilmsContent","useLatestFilmsFetch","loading","LatestFilms","topRatedMovies","topRatedFilmsActions","fillFilmGenre","response1","TopRatedFilms","useTopRatedFilmsFetch","isLoading","setLoading","listFilms","setListFilms","ids","genreList","genre_ids","moment","format","genreId","genre","join","topRatedFilmsJSX","Routes","exact","path","to","App","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.d5e968ff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__7z-kL\",\"title\":\"styles_title__TIjup\",\"row\":\"styles_row__2F74D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slider\":\"styles_slider__2wczH\",\"row\":\"styles_row__3ragE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableRow\":\"latestFilms_tableRow__3ueOy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableRow\":\"topRatedFilms_tableRow__1UgRC\"};","export const types = Object.freeze({\r\n    // Sync\r\n    RECOMMENDED_FILL: 'RECOMMENDED_FILL',\r\n\r\n    // Async\r\n    RECOMMENDED_FETCH_ASYNC: 'RECOMMENDED_FETCH_ASYNC'\r\n});\r\n","// Types\r\nimport {types} from './types';\r\n\r\nconst initialState = {\r\n    data: [],\r\n};\r\n\r\nexport const recommendedReducer = (state = initialState, {type, payload}) => {\r\n    switch (type) {\r\n        case types.RECOMMENDED_FILL:\r\n            return {...state, data: payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const types = Object.freeze({\r\n    // Sync\r\n    EXAMPLE_FILL: 'EXAMPLE_FILL',\r\n\r\n    // Async\r\n    EXAMPLE_FETCH_ASYNC: 'EXAMPLE_FETCH_ASYNC'\r\n});\r\n","// Types\r\nimport {types} from './types';\r\n\r\nconst initialState = {\r\n    data: [],\r\n};\r\n\r\nexport const exampleReducer = (state = initialState, {type, payload}) => {\r\n    switch (type) {\r\n        case types.EXAMPLE_FILL:\r\n            return {...state, data: payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const types = Object.freeze({\r\n    TRENDING_FILL: 'TRENDING_FILL',\r\n    TRENDING_FETCH_ASYNC: 'TRENDING_FETCH_ASYNC'\r\n});\r\n","import {types} from './types';\r\n\r\nconst initialState = {\r\n    movies: null\r\n}\r\n\r\nexport const trendingReducer = (state = initialState, {type, payload}) => {\r\n    switch (type) {\r\n        case types.TRENDING_FILL:\r\n            return {\r\n                ...state,\r\n                data: payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export const types = Object.freeze({\r\n    // Sync\r\n    FILM_FILL: 'FILM_FILL',\r\n\r\n    // Async\r\n    FILM_FETCH_ASYNC: 'FILM_FETCH_ASYNC'\r\n});\r\n","import {types} from './types';\r\n\r\nconst initialState = {\r\n    data: []\r\n};\r\n\r\nexport const filmReducer = (state = initialState, {type, payload}) => {\r\n    switch (type) {\r\n        case types.FILM_FILL:\r\n            return {...state, data: payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const types = Object.freeze({\r\n    // Sync\r\n    COMMENTS_FILL: 'COMMENTS_FILL',\r\n    COMMENTS_START_FETCHING: 'COMMENTS_START_FETCHING',\r\n    COMMENTS_STOP_FETCHING: 'COMMENTS_STOP_FETCHING',\r\n    COMMENTS_SET_FETCHING_ERROR: 'COMMENTS_SET_FETCHING_ERROR',\r\n\r\n    // Async\r\n    COMMENTS_FETCH_ASYNC: 'COMMENTS_FETCH_ASYNC'\r\n});\r\n","import {types} from './types';\r\n\r\nconst initialState = {\r\n    data: [],\r\n    isFetching: false,\r\n    error: false,\r\n};\r\n\r\nexport const commentsReducer = (state = initialState, {type, payload}) => {\r\n    switch (type) {\r\n        case types.COMMENTS_FILL:\r\n            return {...state, data: payload};\r\n        case types.UI_START_FETCHING:\r\n            return {...state, isFetching: true};\r\n        case types.UI_STOP_FETCHING:\r\n            return {...state, isFetching: false};\r\n        case types.UI_SET_FETCHING_ERROR:\r\n            return {...state, error: payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const types = Object.freeze({\r\n    UI_START_FETCHING: 'UI_START_FETCHING',\r\n    UI_STOP_FETCHING: 'UI_STOP_FETCHING',\r\n    UI_SET_FETCHING_ERROR: 'UI_SET_FETCHING_ERROR',\r\n});\r\n","// Types\r\nimport {types} from './types';\r\n\r\nexport const uiActions = Object.freeze({\r\n    // Sync\r\n    startFetching: () => {\r\n        return {\r\n            type: types.UI_START_FETCHING\r\n        }\r\n    },\r\n    stopFetching: () => {\r\n        return {\r\n            type: types.UI_STOP_FETCHING,\r\n        }\r\n    },\r\n    setFetchingError: (error) => {\r\n        return {\r\n            type: types.UI_SET_FETCHING_ERROR,\r\n            error: true,\r\n            payload: error,\r\n        }\r\n    },\r\n});\r\n","// Types\r\nimport {types} from './types';\r\n\r\nconst initialState = {\r\n    isFetching: false,\r\n    error: false,\r\n};\r\n\r\nexport const uiReducer = (state = initialState, {type, payload, meta}) => {\r\n    switch (type) {\r\n        case types.UI_START_FETCHING:\r\n            return {...state, isFetching: true};\r\n        case types.UI_STOP_FETCHING:\r\n            return {...state, isFetching: false};\r\n        case types.UI_SET_FETCHING_ERROR:\r\n            return {...state, error: payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const types = Object.freeze({\r\n    // Sync\r\n    LATEST_FILMS_FILL: 'LATEST_FILMS_FILL',\r\n    // Async\r\n    LATEST_FILMS_FETCH_ASYNC: 'LATEST_FILMS_FETCH_ASYNC'\r\n});\r\n","// Types\r\nimport {types} from './types';\r\n\r\nconst initialState = {\r\n    data: [],\r\n    isDataReady: false\r\n};\r\n\r\nexport const latestFilmsReducer = (state = initialState, {type, payload}) => {\r\n    switch (type) {\r\n        case types.LATEST_FILMS_FILL:\r\n            return {...state, data: payload, isDataReady: true};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const types = Object.freeze({\r\n    // Sync\r\n    TOP_RATED_FILMS_FILL: \"TOP_RATED_FILMS_FILL\",\r\n    GENRE_FILL: \"GENRE_FILL\",\r\n\r\n    // Async\r\n    TOP_RATED_FILMS_FETCH_ASYNC: \"TOP_RATED_FILMS_FETCH_ASYNC\"\r\n});\r\n","// Types\r\nimport {types} from \"./types\";\r\n\r\nconst initialState = {\r\n    data: [],\r\n    genres: []\r\n};\r\n\r\nexport const topRatedFilmsReducer = (\r\n    state = initialState,\r\n    {type, payload}\r\n) => {\r\n    switch (type) {\r\n        case types.TOP_RATED_FILMS_FILL:\r\n            return {...state, data: payload};\r\n        case types.GENRE_FILL:\r\n            return {...state, genres: payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const types = Object.freeze({\r\n    // Sync\r\n    SIMILAR_MOVIES_FILL: \"SIMILAR_MOVIES_FILL\",\r\n    SIMILAR_MOVIES_START_FETCHING: \"SIMILAR_MOVIES_START_FETCHING\",\r\n    SIMILAR_MOVIES_STOP_FETCHING: \"SIMILAR_MOVIES_STOP_FETCHING\",\r\n    SIMILAR_MOVIES_SET_ERROR: \"SIMILAR_MOVIES_SET_ERROR\",\r\n\r\n    // Async\r\n    SIMILAR_MOVIES_ASYNC: \"SIMILAR_MOVIES_ASYNC\"\r\n});\r\n","// Core\r\nimport {types} from \"./types\";\r\n\r\nconst initialState = {\r\n    data: [],\r\n    isFetching: false,\r\n    error: false\r\n};\r\n\r\nexport const similarMoviesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.SIMILAR_MOVIES_FILL:\r\n            return {...state, data: action.payload};\r\n        case types.SIMILAR_MOVIES_START_FETCHING:\r\n            return {...state, isFetching: true};\r\n        case types.SIMILAR_MOVIES_STOP_FETCHING:\r\n            return {...state, isFetching: false};\r\n        case types.SIMILAR_MOVIES_SET_ERROR:\r\n            return {...state, error: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","// Core\r\nimport {combineReducers} from \"redux\";\r\nimport {recommendedReducer as recommended} from '../bus/recommended/reducer';\r\nimport {exampleReducer as example} from \"../bus/example/reducer\";\r\nimport {trendingReducer as trending} from \"../bus/trending/reducer\";\r\nimport {filmReducer as film} from \"../bus/film/reducer\";\r\nimport {commentsReducer as comments} from \"../bus/comments/reducer\";\r\nimport {uiReducer as ui} from \"../bus/ui\";\r\nimport {latestFilmsReducer as latestFilms} from \"../bus/latestFilms/reducer\";\r\nimport {topRatedFilmsReducer as topMovies} from \"../bus/topRatedFilms/reducer\";\r\nimport {similarMoviesReducer as similarMovies} from \"../bus/similarFilms/reducer\";\r\n\r\n// Reducers\r\n\r\nexport const rootReducer = combineReducers({\r\n    example,\r\n    ui,\r\n    trending,\r\n    film,\r\n    comments,\r\n    latestFilms,\r\n    topMovies,\r\n    similarMovies,\r\n    recommended\r\n});\r\n","// Core\r\nimport {compose} from 'redux';\r\nimport {createLogger} from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\n\r\nexport const logger = createLogger({\r\n    duration: true,\r\n    collapsed: true,\r\n    colors: {\r\n        title: (action) => {\r\n            return action.error ? 'firebrick' : 'deepskyblue';\r\n        },\r\n        prevState: () => '#1C5FAF',\r\n        action: () => '#149945',\r\n        nextState: () => '#A47104',\r\n        error: () => '#ff0005',\r\n    }\r\n});\r\n\r\nconst developmentEnvironment = process.env.NODE_ENV === 'development';\r\nconst devtools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\nconst composeEnhancers = developmentEnvironment && devtools ? devtools : compose;\r\n\r\nconst middleware = [thunk];\r\n\r\nif (developmentEnvironment) {\r\n    middleware.push(logger);\r\n}\r\n\r\nexport {composeEnhancers, middleware};\r\n","// Core\r\nimport {applyMiddleware, createStore} from 'redux';\r\n// Instruments\r\nimport {rootReducer} from './rootReducer';\r\nimport {composeEnhancers, middleware,} from './middleware';\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(...middleware))\r\n);\r\n","// Core\r\nimport {createBrowserHistory} from 'history';\r\n\r\nexport const history = createBrowserHistory();\r\n","export const book = Object.freeze({\r\n    root: \"/\",\r\n    news: \"/news\",\r\n    popularFilms: \"/popular-films\",\r\n    film: \"/films/:id\",\r\n    films: \"/films\",\r\n    topRatedFilms: \"/top-rated-films\",\r\n    latestFilms: \"/latest-films\",\r\n    // this example, don't touch\r\n    example: \"/example\"\r\n});\r\n","export const uri = 'https://api.themoviedb.org/3';\r\nexport const token = process.env.REACT_APP_TOKEN;\r\nexport const imagesSource = 'https://image.tmdb.org/t/p/w500';","import axios from 'axios';\r\n\r\nimport {token, uri} from '../../../api/config';\r\n\r\nexport const api = Object.freeze({\r\n    upcomingMovies: {\r\n        fetch: () => {\r\n            return axios.get(`${uri}/movie/upcoming`, {\r\n                params: {\r\n                    api_key: token,\r\n                    language: 'ru-Ru'\r\n                }\r\n            })\r\n        }\r\n    },\r\n});\r\n","// Types\r\nimport {types} from './types';\r\n// Instruments\r\nimport {api} from './api';\r\nimport {uiActions} from '../ui';\r\n\r\nexport const exampleActions = Object.freeze({\r\n    // Sync\r\n    fill: (payload) => {\r\n        return {\r\n            type: types.EXAMPLE_FILL,\r\n            payload\r\n        }\r\n    },\r\n    // Async\r\n    fetchAsync: () => async (dispatch) => {\r\n        dispatch({\r\n            type: types.EXAMPLE_FETCH_ASYNC\r\n        });\r\n\r\n        dispatch(uiActions.startFetching());\r\n\r\n        try {\r\n            const response = await api.upcomingMovies.fetch();\r\n\r\n            if (response.status === 200) {\r\n                const {results} = response.data;\r\n\r\n                dispatch(exampleActions.fill(results));\r\n            } else {\r\n                console.log(response);\r\n                const error = {\r\n                    status: response.status\r\n                };\r\n\r\n                dispatch(uiActions.setFetchingError(error));\r\n            }\r\n        } catch (error) {\r\n            dispatch(uiActions.setFetchingError({\r\n                status: 401,\r\n                message: 'Not authorized. Provide correct token please',\r\n            }));\r\n        }\r\n\r\n        dispatch(uiActions.stopFetching());\r\n    }\r\n});\r\n","// Core\r\nimport React from 'react';\r\nimport {Table} from 'antd';\r\n\r\nimport {imagesSource} from '../../api/config';\r\n\r\nimport {useExampleFetch} from './hooks/useExampleFetch';\r\n\r\nexport const Example = () => {\r\n    const {isFetching, data, error} = useExampleFetch();\r\n\r\n    const errorAuth = error.status === 401 && (<p>{error.message}</p>);\r\n\r\n    const errorMessage = error.status === 404 && (\r\n        <p>Not found!</p>\r\n    );\r\n\r\n    const loader = isFetching && (\r\n        <p>Loading data from API...</p>\r\n    );\r\n\r\n    const movies = data && data.map(({id, title, overview, poster_path}) => (\r\n        {\r\n            title,\r\n            overview,\r\n            key: id,\r\n            poster: `${imagesSource}${poster_path}`\r\n        }\r\n    ));\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Постер',\r\n            dataIndex: 'poster',\r\n            key: 'poster',\r\n            render: (url) => (\r\n                <img src={url} alt=\"poster\" width={100}/>\r\n            )\r\n        },\r\n        {\r\n            title: 'Название',\r\n            dataIndex: 'title',\r\n            key: 'title',\r\n        },\r\n        {\r\n            title: 'Короткое описание',\r\n            dataIndex: 'overview',\r\n            key: 'overview',\r\n        },\r\n    ];\r\n\r\n    const moviesJSX = !isFetching && data.length > 0 && (\r\n        <Table dataSource={movies} columns={columns}/>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            {errorAuth}\r\n            {errorMessage}\r\n            {loader}\r\n            {moviesJSX}\r\n        </>\r\n    )\r\n};\r\n","import {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport {exampleActions} from '../actions';\r\n\r\nexport const useExampleFetch = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(exampleActions.fetchAsync());\r\n    }, [dispatch]);\r\n\r\n    const {data} = useSelector((state) => state.example);\r\n    const {isFetching, error} = useSelector((state) => state.ui);\r\n\r\n    return {\r\n        data,\r\n        isFetching,\r\n        error\r\n    }\r\n};\r\n","// Core\r\nimport React from 'react';\r\n// Components\r\nimport {Example as ExampleComponent} from '../../bus/example';\r\n\r\nexport const Example = () => {\r\n    return (\r\n        <ExampleComponent/>\r\n    );\r\n};\r\n","export const types = Object.freeze({\r\n    // Sync\r\n    EXAMPLE_FILL: 'EXAMPLE_FILL',\r\n\r\n    // Async\r\n    EXAMPLE_FETCH_ASYNC: 'EXAMPLE_FETCH_ASYNC'\r\n});\r\n","import axios from 'axios';\r\n\r\nimport {token, uri} from '../../../api/config';\r\n\r\nexport const api = Object.freeze({\r\n    upcomingMovies: {\r\n        fetch: () => {\r\n            return axios.get(`${uri}/movie/popular`, {\r\n                params: {\r\n                    api_key: token,\r\n                    language: 'ru-Ru'\r\n                }\r\n            })\r\n        }\r\n    },\r\n});\r\n","// Types\r\nimport {types} from './types';\r\n// Instruments\r\nimport {api} from './api';\r\nimport {uiActions} from '../ui';\r\n\r\nexport const exampleActions = Object.freeze({\r\n    // Sync\r\n    fill: (payload) => {\r\n        return {\r\n            type: types.EXAMPLE_FILL,\r\n            payload\r\n        }\r\n    },\r\n    // Async\r\n    fetchAsync: () => async (dispatch) => {\r\n        dispatch({\r\n            type: types.EXAMPLE_FETCH_ASYNC\r\n        });\r\n\r\n        dispatch(uiActions.startFetching());\r\n\r\n        try {\r\n            const response = await api.upcomingMovies.fetch();\r\n\r\n            if (response.status === 200) {\r\n                const {results} = response.data;\r\n\r\n                dispatch(exampleActions.fill(results));\r\n            } else {\r\n                console.log(response);\r\n                const error = {\r\n                    status: response.status\r\n                };\r\n\r\n                dispatch(uiActions.setFetchingError(error));\r\n            }\r\n        } catch (error) {\r\n            dispatch(uiActions.setFetchingError({\r\n                status: 401,\r\n                message: 'Not authorized. Provide correct token please',\r\n            }));\r\n        }\r\n\r\n        dispatch(uiActions.stopFetching());\r\n    }\r\n});\r\n","import React from 'react';\r\n\r\nexport const columns = [\r\n    {\r\n        title: 'Постер',\r\n        dataIndex: 'poster',\r\n        key: 'poster',\r\n        render: (url) => (\r\n            <img src={url} alt=\"poster\" width={100}/>\r\n        )\r\n    },\r\n    {\r\n        title: 'Название',\r\n        dataIndex: 'title',\r\n        key: 'title',\r\n    },\r\n    {\r\n        title: 'Короткое описание',\r\n        dataIndex: 'overview',\r\n        key: 'overview',\r\n    },\r\n    {\r\n        title: 'Индекс популярности',\r\n        dataIndex: 'popularity',\r\n        key: 'popularity',\r\n    },\r\n    {\r\n        title: 'Количество проголосовавших людей',\r\n        dataIndex: 'vote_count',\r\n        key: 'vote_count',\r\n    },\r\n    {\r\n        title: 'Средняя оценка',\r\n        dataIndex: 'vote_average',\r\n        key: 'vote_average',\r\n        defaultSortOrder: 'descend',\r\n        sorter: (a, b) => a.vote_average - b.vote_average,\r\n    },\r\n];\r\n","// Core\r\nimport {history} from \"../../navigation/history\";\r\nimport {book} from \"../../navigation/book\";\r\n\r\nexport const handleMovieClick = id => history.push(`${book.films}/${id}`);\r\n","// Core\r\nimport React from \"react\";\r\nimport {Empty, Layout, Table} from \"antd\";\r\n// Hooks\r\nimport {usePopularFilms} from \"./hooks/usePopularFilms\";\r\n// Utils\r\nimport Styles from \"./styles/index.module.scss\";\r\nimport {imagesSource} from \"../../api/config\";\r\nimport {columns} from \"./helpers/columns\";\r\nimport {handleMovieClick} from \"../helpers/getHandleMovieClick\";\r\n\r\nconst serverSvg = \"https://image.flaticon.com/icons/svg/2345/2345614.svg\";\r\n\r\nexport const PopularFilms = () => {\r\n    const {isFetching, data, error} = usePopularFilms();\r\n\r\n    const errorAuth = error.status === 401 && (\r\n        <Empty\r\n            className={Styles.container}\r\n            image={serverSvg}\r\n            description={<span>{error.message}</span>}\r\n        />\r\n    );\r\n\r\n    const errorMessage = error.status === 404 && (\r\n        <Empty\r\n            className={Styles.container}\r\n            image={serverSvg}\r\n            description={<span>Not found!</span>}\r\n        />\r\n    );\r\n\r\n    const loader = isFetching && (\r\n        <Empty\r\n            image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            description={<span>Loading data from API...</span>}\r\n        />\r\n    );\r\n\r\n    const movies =\r\n        data &&\r\n        data.map(\r\n            ({\r\n                 id,\r\n                 title,\r\n                 popularity,\r\n                 vote_count,\r\n                 overview,\r\n                 vote_average,\r\n                 poster_path\r\n             }) => ({\r\n                title,\r\n                popularity,\r\n                overview,\r\n                vote_count,\r\n                vote_average,\r\n                key: id,\r\n                poster: `${imagesSource}${poster_path}`\r\n            })\r\n        );\r\n\r\n    const moviesJSX = !isFetching && data.length > 0 && (\r\n        <Table\r\n            rowClassName={Styles.tableRow}\r\n            dataSource={movies}\r\n            columns={columns}\r\n            onRow={(record, rowIndex) => ({\r\n                onClick: () => handleMovieClick(record.key)\r\n            })}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Layout>\r\n                <Layout.Content className={Styles.container}>\r\n                    {errorAuth}\r\n                    {errorMessage}\r\n                    {loader}\r\n                    {moviesJSX}\r\n                </Layout.Content>\r\n            </Layout>\r\n        </>\r\n    );\r\n};\r\n","import {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport {exampleActions} from '../actions';\r\n\r\nexport const usePopularFilms = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(exampleActions.fetchAsync());\r\n    }, [dispatch]);\r\n\r\n    const {data} = useSelector((state) => state.example);\r\n    const {isFetching, error} = useSelector((state) => state.ui);\r\n\r\n    return {\r\n        data,\r\n        isFetching,\r\n        error\r\n    }\r\n};\r\n","// Core\r\nimport React from 'react';\r\n// Components\r\nimport {PopularFilms} from '../../bus/popularFilms';\r\n\r\nexport const PopularFilmsPage = () => {\r\n    return (\r\n        <PopularFilms/>\r\n    );\r\n};\r\n","// Core\r\nimport React from \"react\";\r\nimport {Card} from \"antd\";\r\nimport cx from \"classnames\";\r\n// Utils\r\nimport styles from \"./styles/styles.module.scss\";\r\n\r\nexport const MovieCard = props => {\r\n    const {\r\n        onClick = () => {\r\n        }, ...item\r\n    } = props;\r\n    const {id, title, overview, poster, releaseYear, rating} = item;\r\n\r\n    return (\r\n        <div className={styles.card}>\r\n            <Card\r\n                hoverable\r\n                style={{width: \"100%\"}}\r\n                cover={<img alt={title} src={poster}/>}\r\n                onClick={() => onClick({id})}\r\n            >\r\n                <div className={cx(styles.label, styles[`label--left`])}>\r\n                    {releaseYear}\r\n                </div>\r\n                <div className={cx(styles.label, styles[`label--right`])}>{rating}</div>\r\n                <Card.Meta title={title} description={overview}/>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n","import axios from 'axios';\r\n\r\nimport {token, uri} from '../../../api/config';\r\n\r\nexport const api = Object.freeze({\r\n    trendingFilms: {\r\n        fetch: (timeWindow) => {\r\n            return axios.get(`${uri}/trending/movie/${timeWindow}`, {\r\n                params: {\r\n                    api_key: token,\r\n                    language: 'ru-Ru'\r\n                }\r\n            })\r\n        }\r\n    }\r\n});\r\n","// Types\r\nimport {types} from './types';\r\n// Instruments\r\nimport {api} from './api';\r\nimport {uiActions} from '../ui';\r\n\r\nexport const trendingActions = Object.freeze({\r\n    fill: (payload) => {\r\n        return {\r\n            type: types.TRENDING_FILL,\r\n            payload\r\n        }\r\n    },\r\n    fetchAsync: (payload) => async (dispatch) => {\r\n        dispatch({type: types.TRENDING_FETCH_ASYNC});\r\n        dispatch(uiActions.startFetching());\r\n\r\n        try {\r\n            const response = await api.trendingFilms.fetch(payload);\r\n\r\n            if (response.status === 200) {\r\n                const {results} = await response.data;\r\n\r\n                dispatch(trendingActions.fill(results));\r\n            } else {\r\n                const error = {\r\n                    status: response.status\r\n                };\r\n\r\n                dispatch(uiActions.setFetchingError(error));\r\n            }\r\n\r\n        } catch (error) {\r\n            dispatch(uiActions.setFetchingError({\r\n                status: 401,\r\n                message: 'Not authorized. Provide correct token please',\r\n            }));\r\n        }\r\n\r\n        dispatch(uiActions.stopFetching());\r\n    }\r\n});\r\n","// Core\r\nimport React, {useState} from \"react\";\r\nimport {Tabs} from \"antd\";\r\n// Components\r\nimport {MovieCard} from \"./components\";\r\n// Utils\r\nimport styles from \"./styles/styles.module.scss\";\r\nimport {mapMovieObj} from \"./helpers/mapMovieObj\";\r\nimport {useTrendingFetch} from \"./hooks/useTrendingFetch\";\r\nimport {handleMovieClick} from \"../helpers/getHandleMovieClick\";\r\n\r\nexport const Trending = () => {\r\n    const [activeTabKey, setActiveTab] = useState(\"1\");\r\n    const [queryParam, setQueryParam] = useState(\"day\");\r\n    const {data, isFetching, error} = useTrendingFetch(queryParam);\r\n\r\n    const errorAuth = error.status === 401 && <p>{error.message}</p>;\r\n    const errorMessage = error.status === 404 && <p>Not found!</p>;\r\n    const hasError = errorAuth || errorMessage;\r\n\r\n    const loader = isFetching && <p>Loading...</p>;\r\n\r\n    const movies =\r\n        data &&\r\n        data.map(movie => (\r\n            <MovieCard\r\n                key={movie.id}\r\n                {...mapMovieObj(movie)}\r\n                onClick={({id}) => handleMovieClick(id)}\r\n            />\r\n        ));\r\n\r\n    const panes = [\r\n        {\r\n            id: \"1\",\r\n            title: \"За сегодня\",\r\n            content: !isFetching ? movies : loader,\r\n            param: \"day\"\r\n        },\r\n        {\r\n            id: \"2\",\r\n            title: \"За неделю\",\r\n            content: !isFetching ? movies : loader,\r\n            param: \"week\"\r\n        }\r\n    ];\r\n\r\n    const handleChange = activeId => {\r\n        const activeTab = panes.filter(pane => pane.id === activeId)[0];\r\n\r\n        setActiveTab(activeId);\r\n        setQueryParam(activeTab.param);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.title}>Трендовые фильмы</div>\r\n            {!hasError ? (\r\n                <Tabs onChange={handleChange} activeId={activeTabKey}>\r\n                    {panes.map(pane => (\r\n                        <Tabs.TabPane tab={pane.title} key={pane.id} closable={false}>\r\n                            <div className={styles.row}>{pane.content}</div>\r\n                        </Tabs.TabPane>\r\n                    ))}\r\n                </Tabs>\r\n            ) : (\r\n                errorAuth || errorMessage\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n","import {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport {trendingActions} from '../actions';\r\n\r\nexport const useTrendingFetch = (timeWindow) => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(trendingActions.fetchAsync(timeWindow));\r\n    }, [dispatch, timeWindow]);\r\n\r\n    const data = useSelector(state => state.trending.data);\r\n    const {isFetching, error} = useSelector(state => state.ui);\r\n\r\n    return {\r\n        data,\r\n        isFetching,\r\n        error\r\n    }\r\n}\r\n","import {imagesSource} from '../../../api/config';\r\n\r\nexport const mapMovieObj = (obj) => {\r\n    return {\r\n        id: obj.id,\r\n        title: obj.title,\r\n        rating: obj.vote_average,\r\n        overview: obj.overview,\r\n        poster: imagesSource + obj.poster_path,\r\n        releaseYear: new Date(obj.release_date).getFullYear()\r\n    }\r\n}\r\n","// Core\r\nimport React from 'react';\r\nimport {Trending} from '../../bus/trending';\r\n\r\nexport const Home = () => {\r\n    return (\r\n        <Trending/>\r\n    );\r\n};\r\n","import axios from 'axios';\r\n\r\nimport {token, uri} from '../../../api/config';\r\n\r\nexport const api = Object.freeze({\r\n    getMovie: {\r\n        fetch: (id) => {\r\n            return axios.get(`${uri}/movie/${id}`, {\r\n                params: {\r\n                    api_key: token,\r\n                    language: 'ru-Ru'\r\n                }\r\n            })\r\n        }\r\n    },\r\n});\r\n","// Types\r\nimport {types} from './types';\r\n// Instruments\r\nimport {api} from './api';\r\nimport {uiActions} from '../ui';\r\n\r\nexport const filmActions = Object.freeze({\r\n    // Sync\r\n    fill: (payload) => {\r\n        return {\r\n            type: types.FILM_FILL,\r\n            payload\r\n        }\r\n    },\r\n    // Async\r\n    fetchAsync: (id) => async (dispatch) => {\r\n        dispatch({\r\n            type: types.FILM_FETCH_ASYNC\r\n        });\r\n        dispatch(uiActions.startFetching());\r\n        try {\r\n            const response = await api.getMovie.fetch(id);\r\n            if (response.status === 200) {\r\n                const {data} = response;\r\n                dispatch(filmActions.fill(data));\r\n            } else {\r\n                const error = {\r\n                    status: response.status\r\n                };\r\n                dispatch(uiActions.setFetchingError(error));\r\n            }\r\n        } catch (error) {\r\n            dispatch(uiActions.setFetchingError({\r\n                status: 401,\r\n                message: 'Not authorized. Provide correct token please',\r\n            }));\r\n        }\r\n        dispatch(uiActions.stopFetching());\r\n    }\r\n});\r\n","import axios from 'axios';\r\n\r\nimport {token, uri} from '../../../api/config';\r\n\r\nexport const api = Object.freeze({\r\n    getComments: {\r\n        fetch: (id) => {\r\n            return axios.get(`${uri}/movie/${id}/reviews`, {\r\n                params: {\r\n                    api_key: token,\r\n                    language: 'en-US'\r\n                }\r\n            })\r\n        }\r\n    },\r\n});\r\n","// Types\r\nimport {types} from './types';\r\n// Instruments\r\nimport {api} from './api';\r\n\r\nexport const commentsActions = Object.freeze({\r\n    // Sync\r\n    startFetching: () => {\r\n        return {\r\n            type: types.COMMENTS_START_FETCHING\r\n        }\r\n    },\r\n    stopFetching: () => {\r\n        return {\r\n            type: types.COMMENTS_STOP_FETCHING,\r\n        }\r\n    },\r\n    setFetchingError: (error) => {\r\n        return {\r\n            type: types.COMMENTS_SET_FETCHING_ERROR,\r\n            error: true,\r\n            payload: error,\r\n        }\r\n    },\r\n    fill: (payload) => {\r\n        return {\r\n            type: types.COMMENTS_FILL,\r\n            payload\r\n        }\r\n    },\r\n    // Async\r\n    fetchAsync: (id) => async (dispatch) => {\r\n        dispatch({\r\n            type: types.COMMENTS_FETCH_ASYNC\r\n        });\r\n        dispatch(commentsActions.startFetching());\r\n        try {\r\n            const response = await api.getComments.fetch(id);\r\n            if (response.status === 200) {\r\n                const {data} = response;\r\n                dispatch(commentsActions.fill(data));\r\n            } else {\r\n                const error = {\r\n                    status: response.status\r\n                };\r\n                dispatch(commentsActions.setFetchingError(error));\r\n            }\r\n        } catch (error) {\r\n            dispatch(commentsActions.setFetchingError({\r\n                status: 401,\r\n                message: 'Not authorized. Provide correct token please',\r\n            }));\r\n        }\r\n        dispatch(commentsActions.stopFetching());\r\n    }\r\n});\r\n","import React from 'react';\r\nimport {Comment, Layout, Spin} from 'antd';\r\nimport {UserOutlined} from '@ant-design/icons';\r\nimport {useCommentsFetch} from './hooks/useCommentsFetch';\r\nimport {useParams} from 'react-router-dom';\r\n\r\nexport const Comments = () => {\r\n    const {Content} = Layout;\r\n    const {id} = useParams();\r\n    const {isFetching, data, error} = useCommentsFetch(id);\r\n    const errorAuth = error.status === 401 && (<p>{error.message}</p>);\r\n    const errorMessage = error.status === 404 && (\r\n        <p>Not found!</p>\r\n    );\r\n    const loader = isFetching && (\r\n        <Spin/>\r\n    );\r\n    const {results} = data;\r\n    const comments = results && results.map(({id, author, content}) => (\r\n        <Comment\r\n            author={author}\r\n            key={id}\r\n            avatar={\r\n                <UserOutlined style={{'fontSize': '25px'}}/>\r\n            }\r\n            content={content}/>)\r\n    );\r\n\r\n    const commentsJSX = !isFetching && results && results.length > 0 && (\r\n        <Content style={{padding: '0 50px'}}>\r\n            {comments}\r\n        </Content>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            {errorAuth}\r\n            {errorMessage}\r\n            {loader}\r\n            {commentsJSX}\r\n        </>\r\n    );\r\n};\r\n","import {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport {commentsActions} from '../actions';\r\n\r\nexport const useCommentsFetch = (id) => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(commentsActions.fetchAsync(id));\r\n    }, [dispatch, id]);\r\n\r\n    const {isFetching, error, data} = useSelector((state) => state.comments);\r\n\r\n    return {\r\n        data,\r\n        isFetching,\r\n        error\r\n    }\r\n};\r\n","// Core\r\nimport React from \"react\";\r\nimport cx from \"classnames\";\r\n// Components\r\nimport {Card} from \"antd\";\r\n// Utils\r\nimport styles from \"./styles.module.scss\";\r\n\r\nexport const MovieTile = props => {\r\n    const {title, overview, poster, releaseYear, rating} = props;\r\n    const releaseYearStyles = cx(styles.label, styles[`label--left`]);\r\n    const ratingStyles = cx(styles.label, styles[`label--right`]);\r\n\r\n    return (\r\n        <div className={styles.movieTile}>\r\n            <Card\r\n                hoverable\r\n                className={styles.card}\r\n                cover={\r\n                    <div className={styles.image}>\r\n                        <img alt={title} src={poster}/>\r\n                    </div>\r\n                }\r\n            >\r\n                <div className={releaseYearStyles}>{releaseYear}</div>\r\n                <div className={ratingStyles}>{rating}</div>\r\n                <Card.Meta title={title} description={overview}/>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n","// Core\r\nimport React from \"react\";\r\n// Components\r\nimport {Carousel, Col, Row} from \"antd\";\r\nimport {MovieTile} from \"../index\";\r\n// Utils\r\nimport styles from \"./styles.module.scss\";\r\nimport {getGroupByFour, getSimilarMovie} from \"../../helpers\";\r\n\r\nexport const SliderMovies = props => {\r\n    const {movies} = props;\r\n    const sliderMovies = getGroupByFour(movies);\r\n\r\n    const SlideItem = ({items}) => (\r\n        <div className={styles.slideItem}>\r\n            <Row gutter={[16, 16]} className={styles.row}>\r\n                {items.length &&\r\n                items.map(item => (\r\n                    <Col span={6} key={item.id}>\r\n                        <MovieTile {...getSimilarMovie(item)} />\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </div>\r\n    );\r\n\r\n    const allSlideJSX =\r\n        movies.length &&\r\n        sliderMovies.map((slide, idx) => <SlideItem key={idx} items={slide}/>);\r\n\r\n    return (\r\n        <div className={styles.slider}>\r\n            <Carousel autoplay>{allSlideJSX}</Carousel>\r\n        </div>\r\n    );\r\n};\r\n","export const getGroupByFour = ([a, b, c, d, ...rest]) => {\r\n    if (rest.length === 0) return [[a, b, c, d].filter(x => x !== undefined)];\r\n    return [[a, b, c, d]].concat(getGroupByFour(rest));\r\n};\r\n","// Utils\r\nimport {imagesSource} from \"../../../api/config\";\r\n\r\nexport const getSimilarMovie = obj => {\r\n    const text = obj && obj.overview;\r\n    const getShortDescription = text ? `${text.substring(0, 150)}...` : \"\";\r\n\r\n    return {\r\n        id: obj.id,\r\n        title: obj.title,\r\n        rating: obj.vote_average,\r\n        overview: getShortDescription,\r\n        poster: imagesSource + obj.poster_path,\r\n        releaseYear: new Date(obj.release_date).getFullYear()\r\n    };\r\n};\r\n","// Core\r\nimport axios from \"axios\";\r\n// Utils\r\nimport {token, uri} from \"../../../api/config\";\r\n\r\nexport const api = Object.freeze({\r\n    getSimilarMovies: {\r\n        fetch: (movie_id, page = 1) => {\r\n            return axios.get(`${uri}/movie/${movie_id}/similar`, {\r\n                params: {\r\n                    api_key: token,\r\n                    language: \"en-US\",\r\n                    page: page\r\n                }\r\n            });\r\n        }\r\n    }\r\n});\r\n","// Types\r\nimport {types} from \"./types\";\r\n// Instruments\r\nimport {api} from \"./api\";\r\n\r\nexport const similarMoviesActions = Object.freeze({\r\n    // Sync\r\n    startFetching: () => {\r\n        return {\r\n            type: types.SIMILAR_MOVIES_START_FETCHING\r\n        };\r\n    },\r\n    stopFetching: () => {\r\n        return {\r\n            type: types.SIMILAR_MOVIES_STOP_FETCHING\r\n        };\r\n    },\r\n    setError: error => {\r\n        return {\r\n            type: types.SIMILAR_MOVIES_SET_ERROR,\r\n            error: true,\r\n            payload: error\r\n        };\r\n    },\r\n    fillMovies: payload => {\r\n        return {\r\n            type: types.SIMILAR_MOVIES_FILL,\r\n            payload\r\n        };\r\n    },\r\n    // Async\r\n    fetchAsync: id => async dispatch => {\r\n        try {\r\n            dispatch({\r\n                type: types.SIMILAR_MOVIES_ASYNC\r\n            });\r\n\r\n            dispatch(similarMoviesActions.startFetching());\r\n            const response = await api.getSimilarMovies.fetch(id);\r\n            const {data, status} = response;\r\n\r\n            if (status !== 200) {\r\n                const error = {\r\n                    status\r\n                };\r\n                return dispatch(similarMoviesActions.setFetchingError(error));\r\n            }\r\n\r\n            dispatch(similarMoviesActions.fillMovies(data.results));\r\n        } catch (error) {\r\n            dispatch(\r\n                similarMoviesActions.setError({\r\n                    status: 401,\r\n                    message: \"Not authorized. Provide correct token please\"\r\n                })\r\n            );\r\n        } finally {\r\n            dispatch(similarMoviesActions.stopFetching());\r\n        }\r\n    }\r\n});\r\n","// Core\r\nimport React from \"react\";\r\n// Components\r\nimport {Col, Row, Spin, Typography} from \"antd\";\r\nimport {SliderMovies} from \"./components\";\r\n// Utils\r\nimport styles from \"./styles.module.scss\";\r\nimport {useSimilarMoviesFetch} from \"./hooks/useSimilarMoviesFetch\";\r\n\r\nexport const SimilarMovies = ({movieId}) => {\r\n    const {isFetching, data, error} = useSimilarMoviesFetch(movieId);\r\n\r\n    const errorAuth = error.status === 401 && <p>{error.message}</p>;\r\n    const errorMessage = error.status === 404 && <p>Not found!</p>;\r\n    const loader = isFetching && <Spin/>;\r\n\r\n    const similarMoviesJSX = !isFetching && !!data.length && (\r\n        <Row gutter={16}>\r\n            <Col>\r\n                <Typography.Title level={3} strong className={styles.title}>\r\n                    Похожие фильмы\r\n                </Typography.Title>\r\n\r\n                <SliderMovies movies={data}/>\r\n            </Col>\r\n        </Row>\r\n    );\r\n\r\n    return (\r\n        <section className={styles.similarFilms}>\r\n            {errorAuth}\r\n            {errorMessage}\r\n            {loader}\r\n            {similarMoviesJSX}\r\n        </section>\r\n    );\r\n};\r\n","// Core\r\nimport {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n// Utils\r\nimport {similarMoviesActions} from \"../actions\";\r\n\r\nexport const useSimilarMoviesFetch = id => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(similarMoviesActions.fetchAsync(id));\r\n    }, [dispatch, id]);\r\n\r\n    const {isFetching, error, data} = useSelector(state => state.similarMovies);\r\n\r\n    return {\r\n        data,\r\n        isFetching,\r\n        error\r\n    };\r\n};\r\n","import axios from 'axios';\r\n\r\nimport {token, uri} from '../../../api/config';\r\n\r\nexport const api = Object.freeze({\r\n    recommended: {\r\n        fetch: (id) => {\r\n            return axios.get(`${uri}/movie/${id}/recommendations`, {\r\n                params: {\r\n                    api_key: token,\r\n                    language: 'ru-Ru'\r\n                }\r\n            })\r\n        }\r\n    },\r\n});\r\n","// Types\r\nimport {types} from './types';\r\n// Instruments\r\nimport {api} from './api';\r\nimport {uiActions} from '../ui';\r\n\r\nexport const recommendedActions = Object.freeze({\r\n    // Sync\r\n    fill: (payload) => {\r\n        return {\r\n            type: types.RECOMMENDED_FILL,\r\n            payload\r\n        }\r\n    },\r\n    // Async\r\n    fetchAsync: (id) => async (dispatch) => {\r\n        dispatch({\r\n            type: types.RECOMMENDED_FETCH_ASYNC\r\n        });\r\n\r\n        //dispatch(uiActions.startFetching());\r\n\r\n        try {\r\n            const response = await api.recommended.fetch(id);\r\n\r\n            if (response.status === 200) {\r\n                const {results} = response.data;\r\n\r\n                dispatch(recommendedActions.fill(results));\r\n            } else {\r\n                console.log(response);\r\n                const error = {\r\n                    status: response.status\r\n                };\r\n\r\n                //dispatch(uiActions.setFetchingError(error));\r\n            }\r\n        } catch (error) {\r\n            dispatch(uiActions.setFetchingError({\r\n                status: 401,\r\n                message: 'Not authorized. Provide correct token please',\r\n            }));\r\n        }\r\n\r\n        dispatch(uiActions.stopFetching());\r\n    }\r\n});\r\n","// Core\r\nimport React from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {Carousel, Col, Rate, Row, Typography} from 'antd';\r\nimport {imagesSource} from '../../api/config';\r\nimport {useRecommendedFetch} from './hooks/useRecommendedFetch';\r\nimport Styles from './styles/rec.module.scss'\r\nimport styles from \"../similarFilms/styles.module.scss\";\r\n\r\nexport const Recommended = () => {\r\n    const {id} = useParams();\r\n    const {isFetching, data, error} = useRecommendedFetch(id);\r\n\r\n    const errorAuth = error.status === 401 && (<p>{error.message}</p>);\r\n\r\n    const errorMessage = error.status === 404 && (\r\n        <p>Not found!</p>\r\n    );\r\n\r\n    const loader = isFetching && (\r\n        <p>Loading data from API...</p>\r\n    );\r\n\r\n    const moviesJSX = !isFetching && data.length && data.map(\r\n        ({id, title, poster_path, vote_average, release_date, overview}, i) => {\r\n            const smallDescription = overview.substr(0, 70) + '...';\r\n            return (\r\n                <Col span={6} key={id}>\r\n                    <div className={Styles[\"poster-item\"]}>\r\n                        <img src={`${imagesSource}${poster_path}`} alt={title}/>\r\n                        <div className={Styles.rate} title={vote_average}>\r\n                            <Rate count={10} style={{fontSize: 12}} disabled allowHalf defaultValue={vote_average}/>\r\n                        </div>\r\n                    </div>\r\n                    <h2>{title}</h2>\r\n                    <time>{release_date}</time>\r\n                    <p>{smallDescription}</p>\r\n                </Col>\r\n            )\r\n        });\r\n\r\n    const carousel = () => {\r\n        let output = [];\r\n\r\n        while (moviesJSX.length) {\r\n            output.push(<div key={Math.random()}><Row gutter={16}>{moviesJSX.splice(0, 4)}</Row></div>);\r\n        }\r\n\r\n        return output;\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {errorAuth}\r\n            {errorMessage}\r\n            {loader}\r\n            <div className={Styles.recommended}>\r\n                <Typography.Title level={3} strong className={styles.title}>\r\n                    Рекомендуемые фильмы\r\n                </Typography.Title>\r\n                <Carousel dots={true} className={Styles.dots}>\r\n                    {carousel()}\r\n                </Carousel>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n","import {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport {recommendedActions} from '../actions';\r\n\r\nexport const useRecommendedFetch = (id) => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(recommendedActions.fetchAsync(id));\r\n    }, [dispatch, id]);\r\n\r\n    const {data} = useSelector((state) => state.recommended);\r\n    const {isFetching, error} = useSelector((state) => state.ui);\r\n\r\n    return {\r\n        data,\r\n        isFetching,\r\n        error\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport {Card, Col, Descriptions, Layout, Row, Spin, Statistic, Tag} from \"antd\";\r\nimport {imagesSource} from \"../../api/config\";\r\nimport {useFilmFetch} from \"./hooks/useFilmFetch\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {Comments} from \"../comments\";\r\nimport {SimilarMovies} from \"../similarFilms\";\r\nimport {Recommended} from \"../recommended\";\r\n\r\nexport const Film = () => {\r\n    const {Content} = Layout;\r\n    const {id} = useParams();\r\n    const {isFetching, data, error} = useFilmFetch(id);\r\n\r\n    const errorAuth = error.status === 401 && <p>{error.message}</p>;\r\n    const errorMessage = error.status === 404 && <p>Not found!</p>;\r\n\r\n    const loader = isFetching && <Spin/>;\r\n    const {\r\n        title,\r\n        overview,\r\n        backdrop_path,\r\n        release_date,\r\n        status,\r\n        vote_count,\r\n        vote_average,\r\n        genres,\r\n        popularity,\r\n        budget,\r\n        revenue\r\n    } = data;\r\n    const image = backdrop_path && imagesSource + backdrop_path;\r\n\r\n    const movieGenres =\r\n        genres &&\r\n        genres.map(item => (\r\n            <Tag color=\"#0d1eec\" style={{marginBottom: 5}} key={item.id}>\r\n                {item.name}\r\n            </Tag>\r\n        ));\r\n\r\n    const moviesJSX = !isFetching && (data !== null) > 0 && (\r\n        <Content style={{padding: \"0 50px\"}}>\r\n            <div className=\"site-layout-content\" style={{marginBottom: \"20px\"}}>\r\n                <Descriptions title=\"О фильме\" layout=\"vertical\" bordered>\r\n                    <Descriptions.Item label=\"Постер\">\r\n                        <img src={image} alt={imagesSource + backdrop_path}/>\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"Название\">{title}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Дата релиза\">\r\n                        {release_date}\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"Статус\">{status}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Количество проголосовавших людей\">\r\n                        {vote_count}\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"Средняя оценка\">\r\n                        {vote_average}\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"Короткое описание\">\r\n                        {overview}\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"Жанры под которые попадает фильм\">\r\n                        {movieGenres}\r\n                    </Descriptions.Item>\r\n                </Descriptions>\r\n            </div>\r\n            <Row gutter={16}>\r\n                <Col span={8}>\r\n                    <Card>\r\n                        <Statistic\r\n                            title=\"Бюджет\"\r\n                            value={budget}\r\n                            valueStyle={{color: \"#0d1eec\"}}\r\n                            prefix=\"$\"\r\n                        />\r\n                    </Card>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Card>\r\n                        <Statistic\r\n                            title=\"Доходность\"\r\n                            value={revenue}\r\n                            valueStyle={{color: \"#0d1eec\"}}\r\n                            prefix=\"$\"\r\n                        />\r\n                    </Card>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Card>\r\n                        <Statistic\r\n                            title=\"Популярность\"\r\n                            value={popularity}\r\n                            precision={3}\r\n                            valueStyle={{color: \"#0d1eec\"}}\r\n                        />\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Recommended/>\r\n            <Comments/>\r\n            <SimilarMovies movieId={id}/>;\r\n        </Content>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            {errorAuth}\r\n            {errorMessage}\r\n            {loader}\r\n            {moviesJSX}\r\n        </>\r\n    );\r\n};\r\n","import {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport {filmActions} from '../actions';\r\n\r\nexport const useFilmFetch = (id) => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(filmActions.fetchAsync(id));\r\n    }, [dispatch, id]);\r\n\r\n    const {data} = useSelector((state) => state.film);\r\n    const {isFetching, error} = useSelector((state) => state.ui);\r\n\r\n    return {\r\n        data,\r\n        isFetching,\r\n        error\r\n    }\r\n};\r\n","// Core\r\nimport React from 'react';\r\n// Components\r\nimport {Film as FilmComponent} from '../../bus/film';\r\n\r\nexport const Film = () => {\r\n    return (\r\n        <FilmComponent/>\r\n    );\r\n};\r\n","import axios from 'axios';\r\n\r\nimport {token, uri} from '../../../api/config';\r\n\r\nexport const api = Object.freeze({\r\n    latestFilms: {\r\n        fetch: () => {\r\n            return axios.get(`${uri}/movie/latest`, {\r\n                params: {\r\n                    api_key: token,\r\n                    language: 'ru-Ru'\r\n                }\r\n            })\r\n        }\r\n    },\r\n});\r\n","// Types\r\nimport {types} from './types';\r\n// Instruments\r\nimport {api} from './api';\r\nimport {uiActions} from '../ui';\r\n\r\nexport const latestFilmsActions = Object.freeze({\r\n    // Sync\r\n    fill: (payload) => {\r\n        return {\r\n            type: types.LATEST_FILMS_FILL,\r\n            payload\r\n        }\r\n    },\r\n    // Async\r\n    fetchAsync: () => async (dispatch) => {\r\n        dispatch({\r\n            type: types.LATEST_FILMS_FILL\r\n        });\r\n\r\n        dispatch(uiActions.startFetching());\r\n\r\n        try {\r\n            const response = await api.latestFilms.fetch();\r\n\r\n            if (response.status === 200) {\r\n                const {data} = response;\r\n\r\n                dispatch(latestFilmsActions.fill(data));\r\n            } else {\r\n                const error = {\r\n                    status: response.status\r\n                };\r\n\r\n                dispatch(uiActions.setFetchingError(error));\r\n            }\r\n        } catch (error) {\r\n            dispatch(uiActions.setFetchingError({\r\n                status: 401,\r\n                message: 'Not authorized. Provide correct token please',\r\n            }));\r\n        }\r\n\r\n        dispatch(uiActions.stopFetching());\r\n    }\r\n});\r\n","// Core\r\nimport React from 'react';\r\n\r\nconst checkForImgSource = (url) => {\r\n    const lastElementInImgPath = url.split('/').pop();\r\n\r\n    if (lastElementInImgPath.indexOf('null') === -1) {\r\n        return <img src={url} alt=\"poster\" width={100}/>\r\n    } else {\r\n        return 'There is no image for this movie';\r\n    }\r\n}\r\n\r\nexport const columnsScheme = [\r\n    {\r\n        title: 'Постер',\r\n        dataIndex: 'poster',\r\n        key: 'poster',\r\n        render: (url) => checkForImgSource(url)\r\n    },\r\n    {\r\n        title: 'Название',\r\n        dataIndex: 'title',\r\n        key: 'title',\r\n    },\r\n    {\r\n        title: 'Дата релиза',\r\n        dataIndex: 'release_date',\r\n        key: 'release_date',\r\n    },\r\n    {\r\n        title: 'Доходность',\r\n        dataIndex: 'revenue',\r\n        key: 'revenue',\r\n    },\r\n    {\r\n        title: 'Статус',\r\n        dataIndex: 'status',\r\n        key: 'status',\r\n    },\r\n    {\r\n        title: 'Популярность',\r\n        dataIndex: 'popularity',\r\n        key: 'popularity',\r\n    },\r\n    {\r\n        title: 'Короткое описание',\r\n        dataIndex: 'overview',\r\n        key: 'overview',\r\n    },\r\n];\r\n","// Core\r\nimport React from \"react\";\r\nimport {Table} from \"antd\";\r\n// Api\r\nimport {imagesSource} from \"../../../api/config\";\r\n// Hooks\r\nimport {useLatestFilmsFetch} from \"./useLatestFilmsFetch\";\r\n// Hepler\r\nimport styles from \"../index.module.scss\";\r\nimport {columnsScheme} from \"../helper\";\r\nimport {handleMovieClick} from \"../../helpers/getHandleMovieClick\";\r\n\r\nexport const useLatestFilmsContent = () => {\r\n    const {data, isDataReady, isFetching, error} = useLatestFilmsFetch();\r\n\r\n    const errorAuth = error.status === 401 && <p>{error.message}</p>;\r\n    const errorMessage = error.status === 404 && <p>Not found!</p>;\r\n\r\n    const movie = () => {\r\n        if (!isFetching && isDataReady) {\r\n            return [\r\n                {\r\n                    key: data.id,\r\n                    poster: `${imagesSource}${data.poster_path}`,\r\n                    title: data.title,\r\n                    release_date: data.release_date,\r\n                    revenue: data.revenue,\r\n                    status: data.status,\r\n                    popularity: data.popularity,\r\n                    overview: data.overview\r\n                }\r\n            ];\r\n        }\r\n    };\r\n\r\n    const moviesJSX = (\r\n        <Table\r\n            rowClassName={styles.tableRow}\r\n            dataSource={movie()}\r\n            columns={columnsScheme}\r\n            loading={isFetching}\r\n            onRow={(record, rowIndex) => ({\r\n                onClick: () => handleMovieClick(record.key)\r\n            })}\r\n        />\r\n    );\r\n\r\n    return {\r\n        errorAuth,\r\n        errorMessage,\r\n        moviesJSX\r\n    };\r\n};\r\n","import {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport {latestFilmsActions} from '../actions';\r\n\r\nexport const useLatestFilmsFetch = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(latestFilmsActions.fetchAsync());\r\n    }, [dispatch]);\r\n\r\n    const {data, isDataReady} = useSelector((state) => state.latestFilms);\r\n    const {isFetching, error} = useSelector((state) => state.ui);\r\n\r\n    return {\r\n        data,\r\n        isDataReady,\r\n        isFetching,\r\n        error\r\n    }\r\n};\r\n","// Core\r\nimport React from 'react';\r\n\r\nimport {useLatestFilmsContent} from './hooks/useLatestFilmsContent';\r\n\r\nexport const LatestFilms = () => {\r\n    const {errorAuth, errorMessage, moviesJSX} = useLatestFilmsContent();\r\n\r\n    return (\r\n        <>\r\n            {errorAuth}\r\n            {errorMessage}\r\n            {moviesJSX}\r\n        </>\r\n    )\r\n};\r\n","// Core\r\nimport React from 'react';\r\n// Components\r\nimport {LatestFilms as LatestFilmsComponent} from '../../bus/latestFilms';\r\n\r\nexport const LatestFilms = () => {\r\n    return (\r\n        <LatestFilmsComponent/>\r\n    );\r\n};\r\n","import axios from \"axios\";\r\n\r\nimport {token, uri} from \"../../../api/config\";\r\n\r\nexport const api = Object.freeze({\r\n    topRatedMovies: {\r\n        fetch: () => {\r\n            return axios.get(`${uri}/movie/top_rated`, {\r\n                params: {\r\n                    api_key: token,\r\n                    language: \"ru-Ru\"\r\n                }\r\n            });\r\n        }\r\n    },\r\n    movieGenres: {\r\n        fetch: () => {\r\n            return axios.get(`${uri}/genre/movie/list`, {\r\n                params: {\r\n                    api_key: token,\r\n                    language: \"ru-Ru\"\r\n                }\r\n            });\r\n        }\r\n    }\r\n});\r\n","// Types\r\nimport {types} from \"./types\";\r\n// Instruments\r\nimport {api} from \"./api\";\r\nimport {uiActions} from \"../ui\";\r\n\r\nexport const topRatedFilmsActions = Object.freeze({\r\n    // Sync\r\n    fill: payload => {\r\n        return {\r\n            type: types.TOP_RATED_FILMS_FILL,\r\n            payload\r\n        };\r\n    },\r\n    fillFilmGenre: payload => {\r\n        return {\r\n            type: types.GENRE_FILL,\r\n            payload\r\n        };\r\n    },\r\n    // Async\r\n\r\n    fetchAsync: () => async dispatch => {\r\n        dispatch({\r\n            type: types.TOP_RATED_FILMS_FETCH_ASYNC\r\n        });\r\n\r\n        dispatch(uiActions.startFetching());\r\n\r\n        try {\r\n            const response1 = await api.movieGenres.fetch();\r\n            if (response1.status === 200) {\r\n                const {genres} = response1.data;\r\n                dispatch(topRatedFilmsActions.fillFilmGenre(genres));\r\n            } else {\r\n                console.log(response1);\r\n                const error = {\r\n                    status: response1.status\r\n                };\r\n                dispatch(uiActions.setFetchingError(error));\r\n            }\r\n        } catch (error) {\r\n            dispatch(\r\n                uiActions.setFetchingError({\r\n                    status: error.status,\r\n                    message: \"Not authorized. Provide correct token please\"\r\n                })\r\n            );\r\n        }\r\n\r\n        try {\r\n            const response = await api.topRatedMovies.fetch();\r\n\r\n            if (response.status === 200) {\r\n                const {results} = response.data;\r\n\r\n                dispatch(topRatedFilmsActions.fill(results));\r\n            } else {\r\n                console.log(response);\r\n                const error = {\r\n                    status: response.status\r\n                };\r\n\r\n                dispatch(uiActions.setFetchingError(error));\r\n            }\r\n        } catch (error) {\r\n            dispatch(\r\n                uiActions.setFetchingError({\r\n                    status: 401,\r\n                    message: \"Not authorized. Provide correct token please\"\r\n                })\r\n            );\r\n        }\r\n\r\n        dispatch(uiActions.stopFetching());\r\n    }\r\n});\r\n","// Core\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {Table} from \"antd\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/ru\";\r\n// Utils\r\nimport styles from \"./index.module.scss\";\r\nimport {imagesSource} from \"../../api/config\";\r\nimport {useTopRatedFilmsFetch} from \"./hooks/useTopRatedFilmsFetch\";\r\nimport {handleMovieClick} from \"../helpers/getHandleMovieClick\";\r\n\r\nconst getGenreName = (ids, genreList) => {\r\n    const getName = genreId => {\r\n        const [part] = genreList.filter(genre => genre.id === genreId);\r\n        return part.name;\r\n    };\r\n\r\n    return ids.map(getName).join(\", \");\r\n};\r\n\r\nexport const TopRatedFilms = () => {\r\n    const {isFetching, data, error, genres} = useTopRatedFilmsFetch();\r\n\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [listFilms, setListFilms] = useState([]);\r\n\r\n    const errorAuth = error.status === 401 && <p>{error.message}</p>;\r\n    const errorMessage = error.status === 404 && <p>Not found!</p>;\r\n    const loader = isFetching && <p>Loading data from API...</p>;\r\n    const title = <h1>Список рейтинговых фильмов</h1>;\r\n\r\n    useEffect(() => {\r\n        if (listFilms.length === 0 && data.length > 0 && genres.length > 0) {\r\n            const topRatedFilms =\r\n                data &&\r\n                data.map(\r\n                    ({\r\n                         id,\r\n                         title,\r\n                         overview,\r\n                         poster_path,\r\n                         release_date,\r\n                         vote_count,\r\n                         vote_average,\r\n                         genre_ids\r\n                     }) => ({\r\n                        title,\r\n                        overview,\r\n                        key: id,\r\n                        poster: `${imagesSource}${poster_path}`,\r\n                        release_date: `${moment(release_date).format(\"D MMMM, YYYY\")}`,\r\n                        vote_count,\r\n                        vote_average,\r\n                        genres: getGenreName(genre_ids, genres)\r\n                    })\r\n                );\r\n\r\n            setListFilms(topRatedFilms);\r\n            setLoading(false);\r\n        }\r\n    }, [isLoading, listFilms, data, genres]);\r\n\r\n    //data finished\r\n    const columns = [\r\n        {\r\n            title: \"Постер\",\r\n            dataIndex: \"poster\",\r\n            key: \"poster\",\r\n            render: url => <img src={url} alt=\"poster\" width={100}/>\r\n        },\r\n        {\r\n            title: \"Название\",\r\n            dataIndex: \"title\",\r\n            key: \"title\"\r\n        },\r\n        {\r\n            title: \"Короткое описание\",\r\n            dataIndex: \"overview\",\r\n            key: \"overview\"\r\n        },\r\n        {\r\n            title: \"Дата релиза\",\r\n            dataIndex: \"release_date\",\r\n            key: \"release_date\"\r\n        },\r\n        {\r\n            title: \"Количество проголосовавших людей\",\r\n            dataIndex: \"vote_count\",\r\n            key: \"vote_count\"\r\n        },\r\n        {\r\n            title: \"Средняя оценка\",\r\n            dataIndex: \"vote_average\",\r\n            key: \"vote_average\"\r\n        },\r\n        {\r\n            title: \"Жанры\",\r\n            dataIndex: \"genres\",\r\n            key: \"genres\"\r\n        }\r\n    ];\r\n\r\n    const topRatedFilmsJSX = !isFetching && data.length > 0 && (\r\n        <Table\r\n            rowClassName={styles.tableRow}\r\n            dataSource={listFilms}\r\n            columns={columns}\r\n            loading={isLoading}\r\n            onRow={(record, rowIndex) => ({\r\n                onClick: () => handleMovieClick(record.key)\r\n            })}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <>\r\n            {errorAuth}\r\n            {errorMessage}\r\n            {loader}\r\n            {title}\r\n            {topRatedFilmsJSX}\r\n        </>\r\n    );\r\n};\r\n","import {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport {topRatedFilmsActions} from \"../actions\";\r\n\r\nexport const useTopRatedFilmsFetch = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(topRatedFilmsActions.fetchAsync());\r\n    }, [dispatch]);\r\n\r\n    const {data, genres} = useSelector(state => state.topMovies);\r\n    const {isFetching, error} = useSelector(state => state.ui);\r\n\r\n    return {\r\n        data,\r\n        isFetching,\r\n        error,\r\n        genres\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport {TopRatedFilms as TopRatedFilmsComponent} from \"../../bus/topRatedFilms\";\r\n\r\nexport const TopRatedFilms = () => {\r\n    return (\r\n        <>\r\n            <TopRatedFilmsComponent/>\r\n        </>\r\n    );\r\n};\r\n","// Core\r\nimport React from \"react\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\n// Routes\r\nimport {book} from \"./book\";\r\n// Pages\r\nimport {Example} from \"../pages/example\";\r\nimport {PopularFilmsPage} from \"../pages/popularFilms\";\r\nimport {Home} from \"../pages/home\";\r\nimport {Film} from \"../pages/film\";\r\nimport {LatestFilms} from \"../pages/latest-films\";\r\nimport {TopRatedFilms} from \"../pages/topRatedFilms\";\r\n\r\nexport const Routes = () => (\r\n    <>\r\n        <Switch>\r\n            <Route exact path={book.root} >\r\n                <Home/>\r\n            </Route>\r\n            <Route exact path={book.popularFilms}>\r\n                <PopularFilmsPage/>\r\n            </Route>\r\n            <Route exact path={book.film}>\r\n                <Film/>\r\n            </Route>\r\n            <Route exact path={book.films}>\r\n                <Redirect to={book.topRatedFilms}/>\r\n            </Route>\r\n            <Route exact path={book.latestFilms}>\r\n                <LatestFilms/>\r\n            </Route>\r\n            <Route exact path={book.topRatedFilms}>\r\n                <TopRatedFilms/>\r\n            </Route>\r\n\r\n            {/* dont touch example */}\r\n            <Route exact path={book.example}>\r\n                <Example/>\r\n            </Route>\r\n        </Switch>\r\n    </>\r\n);\r\n","// Core\r\nimport React from 'react';\r\nimport {Router} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\n// Instruments\r\nimport {store} from './init/store';\r\n// Routes\r\nimport {history} from './navigation/history';\r\nimport {Routes} from './navigation';\r\n\r\nexport const App = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <Router history={history}>\r\n                <Routes/>\r\n            </Router>\r\n        </Provider>\r\n    )\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister();\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport {App} from './App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieTile\":\"styles_movieTile__2UE8v\",\"card\":\"styles_card__1In4-\",\"image\":\"styles_image__39cCA\",\"label\":\"styles_label__ADTep\",\"label--left\":\"styles_label--left__3S5Mr\",\"label--right\":\"styles_label--right__CfLvU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"styles_card__37aKz\",\"label\":\"styles_label__3Imat\",\"label--left\":\"styles_label--left__2DLO6\",\"label--right\":\"styles_label--right__1DfvX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"similarFilms\":\"styles_similarFilms__3dQ5u\",\"title\":\"styles_title__2346a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__zam0q\",\"empty\":\"styles_empty__1Dzte\",\"tableRow\":\"styles_tableRow__3IAxt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recommended\":\"rec_recommended__2iuxQ\",\"dots\":\"rec_dots__Rzf4e\",\"poster-item\":\"rec_poster-item__3fN7M\",\"rate\":\"rec_rate__1HIMs\"};"],"sourceRoot":""}